ARG DOCKER_BASE_IMAGE=pcl:trunk
FROM $DOCKER_BASE_IMAGE
ARG ROS_DISTRO=kinetic
ARG NUM_OF_CORE_TO_BUILD=3
ARG PCL_ORIGINAL_VER=1.6.2
ARG PCL_INSTALLED_VER=1.8.1
ARG PCL_CMAKE_VER=1.8


RUN rm /bin/sh && ln -s /bin/bash /bin/sh

RUN cd /root/catkin_ws/src && \
    git clone https://github.com/ros-perception/pcl_msgs.git && \
    git clone https://github.com/ros-perception/perception_pcl.git && \
    git clone https://github.com/ros/geometry2.git
RUN cd /root/catkin_ws/src/perception_pcl && \ 
    rosdep update && \ 
    apt-get update && \
    apt-get install -y libbullet-dev

RUN cd /root/catkin_ws/src/perception_pcl && \
    find . -name package.xml -type f -exec sed -i "s|<version>$PCL_ORIGINAL_VER</version>|<version>${PCL_INSTALLED_VER}</version>|g" {} \; && \
    find . -name CMakeLists.txt -type f -exec sed -i "s|find_package(PCL REQUIRED|find_package(PCL $PCL_CMAKE_VER REQUIRED|g" {} \;

RUN cd /root/catkin_ws && \
    source ./devel/setup.bash && \
    catkin_make -j$NUM_OF_CORE_TO_BUILD

RUN cd /root && \
    apt-get update && \ 
    apt-get install -y libxss1 libxss-dev && \
    wget -c https://go.microsoft.com/fwlink/?LinkID=760868 -O vscode.deb

RUN cd /root && \
    dpkg -i vscode.deb || true && \
    apt -f install -y && \
    dpkg -i vscode.deb

RUN code --user-data-dir --install-extension austin.code-gnu-global && \
    code --user-data-dir --install-extension ms-vscode.cpptools && \
    code --user-data-dir --install-extension xaver.clang-format && \ 
    code --user-data-dir --install-extension twxs.cmake && \
    code --user-data-dir --install-extension vector-of-bool.cmake-tools && \
    code --user-data-dir --install-extension christian-kohler.path-intellisense && \
    code --user-data-dir --install-extension visualstudioexptteam.vscodeintellicode

RUN apt-get update && \
    apt-get install -y ccache && \

    pushd /usr/local && \
    mkdir bin-ccache && \
    cd bin-ccache && \
    ln -s $(which ccache) gcc && \
    ln -s $(which ccache) g++ && \
    ln -s $(which ccache) cpp && \
    ln -s $(which ccache) c++ && \
    ln -s $(which ccache) cc && \
    echo "export CCACHE_DIR=/tmp/.cache" >> ~/.bashrc && \
    echo "export set CC=ccache gcc" >> ~/.bashrc && \
    echo "export set CXX=\"ccache g++\"" >> ~/.bashrc && \
    echo "export PATH=/usr/local/bin-ccache:\$PATH" >> ~/.bashrc

RUN apt-get install binutils-gold && \
    update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.gold" 20 && \
    update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.bfd" 10


RUN echo "alias catkin_make=\"catkin_make -DCMAKE_C_COMPILER=/usr/local/bin-ccache/gcc -DCMAKE_CXX_COMPILER=/usr/local/bin-ccache/g++\" " >> ~/.bashrc
RUN apt-get install ros-$ROS_DISTRO-tf2-sensor-msgs
RUN echo "source /root/catkin_ws/devel/setup.bash" >> ~/.bashrc && \
    echo "export PS1='🐳S \e[1;32mpcl-ros\e[m\e[1;39m@\e[m\[\e[1;36m\]\h \[\e[1;34m\]\W\[\e[0;35m\] \[\e[1;36m\]# \[\e[0m\]'" >> ~/.bashrc && \
    cp ~/.bashrc ~/.bashrcLocal && \ 
    echo "export ROS_MASTER_URI='http://172.16.17.115:11311'" >> ~/.bashrc && \                                                                                                                                  
    echo "export ROS_MASTER_URI='http://localhost:11311'" >> ~/.bashrcLocal
