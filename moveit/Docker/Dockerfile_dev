ARG DOCKER_BASE_IMAGE=moveit:latest
FROM $DOCKER_BASE_IMAGE
ARG ROS_DISTRO=kinetic

RUN cd /root && \
    apt-get update && \ 
    apt-get install -y libxss1 libxss-dev && \
    wget -c https://go.microsoft.com/fwlink/?LinkID=760868 -O vscode.deb


RUN cd /root && \
    dpkg -i vscode.deb || true && \
    apt -f install -y && \
    dpkg -i vscode.deb  && \
    rm vscode.deb

RUN code --user-data-dir --install-extension austin.code-gnu-global && \
    code --user-data-dir --install-extension ms-vscode.cpptools && \
    code --user-data-dir --install-extension xaver.clang-format && \ 
    code --user-data-dir --install-extension twxs.cmake && \
    code --user-data-dir --install-extension vector-of-bool.cmake-tools && \
    code --user-data-dir --install-extension christian-kohler.path-intellisense && \
    code --user-data-dir --install-extension visualstudioexptteam.vscodeintellicode

RUN code --user-data-dir --install-extension ms-python.python \
      donjayamanne.python-extension-pack \
      njpwerner.autodocstring \
      ajshort.ros \
      pijar.ros-snippets \
      ajshort.msg

RUN apt-get update && \ 
    apt-get install -y ccache && \                                                                            
    pushd /usr/local && \ 
    mkdir bin-ccache && \ 
    cd bin-ccache && \ 
    ln -s $(which ccache) gcc && \ 
    ln -s $(which ccache) g++ && \ 
    ln -s $(which ccache) cpp && \ 
    ln -s $(which ccache) c++ && \ 
    ln -s $(which ccache) cc && \ 
    echo "export CCACHE_DIR=/tmp/.cache" >> ~/.bashrc && \ 
    echo "export set CC=ccache gcc" >> ~/.bashrc && \ 
    echo "export set CXX=\"ccache g++\"" >> ~/.bashrc && \ 
    echo "export PATH=/usr/local/bin-ccache:\$PATH" >> ~/.bashrc

RUN apt-get install binutils-gold && \ 
    update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.gold" 20 && \ 
    update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.bfd" 10

RUN cd ~/catkin_ws/src && \ 
    mkdir sim_device && cd sim_device && \ 
    git clone https://github.com/IFL-CAMP/iiwa_stack.git && \ 
    git clone https://github.com/nalt/wsg50-ros-pkg.git

RUN cd ~/catkin_ws && source devel/setup.bash && \
    catkin_make

RUN echo "source /root/catkin_ws/devel/setup.bash" >> ~/.bashrc && \
    echo "export PS1='\e[1;32mMoveIt\e[m\e[1;39m@\e[m\[\e[1;36m\]\h:\[\e[1;34m\]\W\[\e[0;35m\] \[\e[1;36m\]$ \[\e[0m\]'" >> ~/.bashrc && \
    cp ~/.bashrc ~/.bashrcLocal && \
    echo "export ROS_MASTER_URI='http://172.16.17.115:11311'" >> ~/.bashrc && \
    echo "export ROS_MASTER_URI='http://localhost:11311'" >> ~/.bashrcLocal
